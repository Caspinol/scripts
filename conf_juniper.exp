#!/usr/bin/expect

#####################################################################
##                                                                 ##
## author: Krzysztof Grobelak                                      ##
## version: 0.0.6                                                  ##
## script for login to a range of devices specified                ##
## by the given query and executing a bunch of specified commands  ##
##                                                                 ##
#####################################################################


# passed arguments

set commit_confirmed [lindex $argv 0]

set commit_time 3

if { $commit_confirmed == "-c" } {
    send_user "Will run with commit confirmed timout of: $commit_time s!!\n"
}

#TODO: add argument parsing to detect different 
# argument configuration

#TODO: make use of database optional

#TODO: take IP list as one of aguments

# user credentials definitions              
set username ""
set password ""

# script config       
set timeout 30

# enable debug if needed
#exp_internal 1


# commands definitions

#specify commands to be executed on device 
set cmd1 ""
set cmd2 ""


# postgres query to obtain all IP's
set postgres_query "select ipaddr from ipinterface join node on ipinterface.nodeid = (select node.nodeid where node.nodesysoid like '.1.3.6.1.4.1.2636.%') where issnmpprimary = 'P';\r"


# default function definitions

proc abort {} {
    send "\nSession over\n"
    exit 1
}

# this will log into specified node and do its magik
proc setNewRadiusServer { nodeIp } {
    global username
    global password
    
    spawn ssh -q -o StrictHostKeyChecking=no $username@$nodeIp
    
    expect {
        eof { 
            send_user "\nERROR - $nodeIp did not promped for password!!\n"
            # dont kill the script just move to next device
            return "continue"
        }
        timeout { 
            send_user "\nERROR - $nodeIp did not ask for password!!!\n"
            # dont kill the script just move to next device
            return "continue"
        }
        "*assword:" { send $password }
    }
    
    expect {
        "*assword:" { 
            send_user "\nERROR - wrong password!!!\n"
            # dont kill the script just move to next device
            return "continue"
        }
        "*>" { send "edit\r" }
        timeout {
            send_user "\nERROR - ssh airspeed@$nodeIp does not like password!!!\n"
            # dont kill the script just move to next device
            return "continue"
        }
    }
    
    send_user "LOG: we in edit mode\n"
    
    ## execute specyfied commands
    ## can add as many as needed
    
    expect {
        "*#" { send "$cmd1\r" }
    }
    
    expect {
        "*#" { send "$cmd2\r" }
    }
    
    expect {
        "*#" {
            if { $commit_confirmed == "-c" } {
                send "commit confirmed $commit_time\r"
            } else {
                send "commit\r"
            }
            expect {
                "*#" {
                    send "exit\rexit\r"
                    send_user "Done!\n"
                }
            }
        }
    }
    send_user "INFO: Finished and disconnected\n"
}

# will return a list of ip's from givenn query
proc findAllNodes {query} {
    
    set ipList ""
    spawn -noecho psql -At -P pager=off -U opennms -c $query

    expect {
        "*\n" {
            foreach ip [split $expect_out(buffer) "\n\r"] {
                if { [string match "*.*.*.*" $ip] } {
                    lappend ipList $ip;
                }
            }
            return $ipList;
        }
    }
}

# main                                                                                                                                                          
set ipList [ findAllNodes $postgres_query ]


foreach ipaddr $ipList {
    send_user "INFO: Setting: $ipaddr\n"
    if { [setNewRadiusServer $ipaddr] == "continue" } {
        continue;
    }
}